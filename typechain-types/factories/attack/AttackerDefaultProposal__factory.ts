/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AttackerDefaultProposal,
  AttackerDefaultProposalInterface,
} from "../../attack/AttackerDefaultProposal";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "delegateCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "test",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "testResult",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061071f806100606000396000f3fe60806040526004361061003f5760003560e01c806356e7b7aa146100445780638da5cb5b1461006d5780638f1db79b14610098578063f8a8fd6d146100c3575b600080fd5b34801561005057600080fd5b5061006b600480360381019061006691906104fa565b6100cd565b005b34801561007957600080fd5b5061008261019f565b60405161008f9190610565565b60405180910390f35b3480156100a457600080fd5b506100ad6101c3565b6040516100ba9190610608565b60405180910390f35b6100cb610251565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012557600080fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161014c9190610671565b600060405180830381855af49150503d8060008114610187576040519150601f19603f3d011682016040523d82523d6000602084013e61018c565b606091505b505090508061019a57600080fd5b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600180546101d0906106b7565b80601f01602080910402602001604051908101604052809291908181526020018280546101fc906106b7565b80156102495780601f1061021e57610100808354040283529160200191610249565b820191906000526020600020905b81548152906001019060200180831161022c57829003601f168201915b505050505081565b6040518060400160405280600781526020017f64656661756c74000000000000000000000000000000000000000000000000008152506001908051906020019061029c92919061029f565b50565b8280546102ab906106b7565b90600052602060002090601f0160209004810192826102cd5760008555610314565b82601f106102e657805160ff1916838001178555610314565b82800160010185558215610314579182015b828111156103135782518255916020019190600101906102f8565b5b5090506103219190610325565b5090565b5b8082111561033e576000816000905550600101610326565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061038182610356565b9050919050565b61039181610376565b811461039c57600080fd5b50565b6000813590506103ae81610388565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610407826103be565b810181811067ffffffffffffffff82111715610426576104256103cf565b5b80604052505050565b6000610439610342565b905061044582826103fe565b919050565b600067ffffffffffffffff821115610465576104646103cf565b5b61046e826103be565b9050602081019050919050565b82818337600083830152505050565b600061049d6104988461044a565b61042f565b9050828152602081018484840111156104b9576104b86103b9565b5b6104c484828561047b565b509392505050565b600082601f8301126104e1576104e06103b4565b5b81356104f184826020860161048a565b91505092915050565b600080604083850312156105115761051061034c565b5b600061051f8582860161039f565b925050602083013567ffffffffffffffff8111156105405761053f610351565b5b61054c858286016104cc565b9150509250929050565b61055f81610376565b82525050565b600060208201905061057a6000830184610556565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105ba57808201518184015260208101905061059f565b838111156105c9576000848401525b50505050565b60006105da82610580565b6105e4818561058b565b93506105f481856020860161059c565b6105fd816103be565b840191505092915050565b6000602082019050818103600083015261062281846105cf565b905092915050565b600081519050919050565b600081905092915050565b600061064b8261062a565b6106558185610635565b935061066581856020860161059c565b80840191505092915050565b600061067d8284610640565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106cf57607f821691505b602082108114156106e3576106e2610688565b5b5091905056fea26469706673582212206a09fe8fb62c964a5d8d5f48783cce4659caacda67f57c84e25dc2f0b96b1a4f64736f6c634300080a0033";

type AttackerDefaultProposalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackerDefaultProposalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttackerDefaultProposal__factory extends ContractFactory {
  constructor(...args: AttackerDefaultProposalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AttackerDefaultProposal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AttackerDefaultProposal__factory {
    return super.connect(runner) as AttackerDefaultProposal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackerDefaultProposalInterface {
    return new Interface(_abi) as AttackerDefaultProposalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AttackerDefaultProposal {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AttackerDefaultProposal;
  }
}
